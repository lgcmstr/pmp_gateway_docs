<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://xml.appriss.com/gateway" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://xml.appriss.com/gateway" elementFormDefault="qualified">
  <!--**************************************************************
       MORE CONSTRAINED BASE TYPES
       Each type here will define a constraint that we wish to hold
       a more constrained document to.  These can then be overridden
       by providing a less constrained version.
      **************************************************************-->
  <xs:attributeGroup name="SourceValue">
    <xs:attribute name="source" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>If there was a translation performed on an elements value to make it conform to the schema. That original value is captured in the OriginalValue attribute.  This is to aid in debugging.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="nil_reason" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation> If an attribute is made nil for any reason the nil_reason will provide a short amount of text as to why.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:complexType name="NonMedicalIdentifierType">
   <xs:simpleContent>
    <xs:extension base="NonMedicalIdentifierBaseType">
      <xs:attributeGroup ref="SourceValue"/>
    </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="NonMedicalIdentifierBaseType">
    <xs:annotation>
      <xs:documentation>For the Identifiers that are non medical.  Not (NCPDP,NPI,DEA,StateIssuedPrescriberLicense). Typical for the patients.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Military"/>
      <xs:enumeration value="SSN"/>
      <xs:enumeration value="StateIssuedID" />
      <xs:enumeration value="UniqueSystemID" />
      <xs:enumeration value="PermanentResidentCard" /><!-- (Green Card) -->
      <xs:enumeration value="Passport" />
      <xs:enumeration value="DriverLicense" />
      <xs:enumeration value="SSN" />
      <xs:enumeration value="TribalID" />
      <xs:enumeration value="Other" /><!-- (Trading partner agreed upon ID, such as cardholder ID.) -->
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="IdentifierType">
    <xs:annotation>
      <xs:documentation>An Identifier of the specified type. A State Jurisdiction can be provided on some types.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Type" type="NonMedicalIdentifierType" minOccurs="0" nillable="true" />
      <xs:element name="Value" type="LimitedStringType" nillable="true" />
      <xs:element name="StateCode" type="USStateCodeType" minOccurs="0" nillable="true" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="StateLicenseIdentifierType">
    <xs:annotation>
      <xs:documentation>A state jurisdictioned professional license number.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Type" type="LimitedStringType" minOccurs="0" nillable="true"/>
      <xs:element name="Value" type="LimitedStringType" nillable="true" />
      <xs:element name="StateCode" type="USStateCodeType" minOccurs="0" nillable="true"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="USStateCodeType">
    <xs:simpleContent>
      <xs:extension base="USStateCodeBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="USStateCodeBaseType">
    <xs:annotation>
      <xs:documentation>All US States, Territories and Military Designations. Plus Canada (CN) and Mexico (MX).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="AA"/>
      <xs:enumeration value="AE"/>
      <xs:enumeration value="AK"/>
      <xs:enumeration value="AL"/>
      <xs:enumeration value="AP"/>
      <xs:enumeration value="AR"/>
      <xs:enumeration value="AS"/>
      <xs:enumeration value="AZ"/>
      <xs:enumeration value="CA"/>
      <xs:enumeration value="CO"/>
      <xs:enumeration value="CT"/>
      <xs:enumeration value="CN"/>
      <xs:enumeration value="DC"/>
      <xs:enumeration value="DE"/>
      <xs:enumeration value="FL"/>
      <xs:enumeration value="FM"/>
      <xs:enumeration value="GA"/>
      <xs:enumeration value="GU"/>
      <xs:enumeration value="HI"/>
      <xs:enumeration value="IA"/>
      <xs:enumeration value="ID"/>
      <xs:enumeration value="IL"/>
      <xs:enumeration value="IN"/>
      <xs:enumeration value="KS"/>
      <xs:enumeration value="KY"/>
      <xs:enumeration value="LA"/>
      <xs:enumeration value="MA"/>
      <xs:enumeration value="MD"/>
      <xs:enumeration value="ME"/>
      <xs:enumeration value="MH"/>
      <xs:enumeration value="MI"/>
      <xs:enumeration value="MN"/>
      <xs:enumeration value="MO"/>
      <xs:enumeration value="MP"/>
      <xs:enumeration value="MS"/>
      <xs:enumeration value="MT"/>
      <xs:enumeration value="MX"/>
      <xs:enumeration value="NC"/>
      <xs:enumeration value="ND"/>
      <xs:enumeration value="NE"/>
      <xs:enumeration value="NH"/>
      <xs:enumeration value="NJ"/>
      <xs:enumeration value="NM"/>
      <xs:enumeration value="NV"/>
      <xs:enumeration value="NY"/>
      <xs:enumeration value="OH"/>
      <xs:enumeration value="OK"/>
      <xs:enumeration value="OR"/>
      <xs:enumeration value="PA"/>
      <xs:enumeration value="PR"/>
      <xs:enumeration value="PW"/>
      <xs:enumeration value="RI"/>
      <xs:enumeration value="SC"/>
      <xs:enumeration value="SD"/>
      <xs:enumeration value="TN"/>
      <xs:enumeration value="TX"/>
      <xs:enumeration value="UT"/>
      <xs:enumeration value="VA"/>
      <xs:enumeration value="VI"/>
      <xs:enumeration value="VT"/>
      <xs:enumeration value="WA"/>
      <xs:enumeration value="WI"/>
      <xs:enumeration value="WV"/>
      <xs:enumeration value="WY"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="SexCodeType">
    <xs:annotation>
      <xs:documentation>Sex (M)ale (F)emale (U)nknown</xs:documentation>
      <xs:appinfo>Sex (M)ale (F)emale (U)nknown</xs:appinfo>
    </xs:annotation>
    <xs:simpleContent>
    <xs:extension base="SexCodeBaseType">
      <xs:attributeGroup ref="SourceValue"/>
   </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="SexCodeBaseType">
      <xs:restriction base="xs:token">
        <xs:enumeration value="F"/>
        <xs:enumeration value="M"/>
        <xs:enumeration value="U"/>
      </xs:restriction>
    </xs:simpleType>

  <xs:complexType name="CompoundDrugProductIdentifierType">
    <xs:simpleContent>
      <xs:extension base="CompoundDrugProductIdentifierBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="CompoundDrugProductIdentifierBaseType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="DIN"/>
      <xs:enumeration value="HRI"/>
      <xs:enumeration value="NDC"/>
      <xs:enumeration value="UPC"/>
      <xs:enumeration value="UPN"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DrugProductIdentifierType">
    <xs:simpleContent>
      <xs:extension base="DrugProductIdentifierBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="DrugProductIdentifierBaseType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="CPD"/>
      <xs:enumeration value="DIN"/>
      <xs:enumeration value="HRI"/>
      <xs:enumeration value="NDC"/>
      <xs:enumeration value="UPC"/>
      <xs:enumeration value="UPN"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="TransmissionFormOfRxOriginCodeType">
    <xs:simpleContent>
      <xs:extension base="TransmissionFormOfRxOriginCodeBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="TransmissionFormOfRxOriginCodeBaseType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="01">
        <xs:annotation>
          <xs:documentation>Written Prescription</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="02">
        <xs:annotation>
          <xs:documentation>Telephone Prescription</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="03">
        <xs:annotation>
          <xs:documentation>Telephone Emergency Prescription</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="04">
        <xs:annotation>
          <xs:documentation>Fax Prescription</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="05">
        <xs:annotation>
          <xs:documentation>Electronic Prescription</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="99">
        <xs:annotation>
          <xs:documentation>Other</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="MethodOfPaymentCodeType">
    <xs:simpleContent>
      <xs:extension base="MethodOfPaymentCodeBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="MethodOfPaymentCodeBaseType">
    <xs:annotation>
      <xs:documentation>A code identifying the method of payment</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="01">
        <xs:annotation>
          <xs:documentation>Private Pay (Cash, Charge, Credit Card)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="02">
        <xs:annotation>
          <xs:documentation>Medicaid</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="03">
        <xs:annotation>
          <xs:documentation>Medicare</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="04">
        <xs:annotation>
          <xs:documentation>Commercial Insurance</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="05">
        <xs:annotation>
          <xs:documentation>Military Installations or VA</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="06">
        <xs:annotation>
          <xs:documentation>Worker's Compensation</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="07">
        <xs:annotation>
          <xs:documentation>Indian Nations</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="99">
        <xs:annotation>
          <xs:documentation>Other</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DrugDosageUnitsCodeType">
    <xs:simpleContent>
      <xs:extension base="DrugDosageUnitsCodeBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="DrugDosageUnitsCodeBaseType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="01">
        <xs:annotation>
          <xs:documentation>Each (used to report as package)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="02">
        <xs:annotation>
          <xs:documentation>Milliliters (ml) (for liters adjust to the decimal milliliter equivalent)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="03">
        <xs:annotation>
          <xs:documentation>Grams (gm) (for milligrams adjust to the decimal gram equivalent)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="USPhoneType">
    <xs:simpleContent>
      <xs:extension base="USPhoneConstraint">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="USPhoneConstraint">
    <xs:annotation>
      <xs:documentation>10 (ideal) or 7 digit phone number.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:positiveInteger">
      <xs:pattern value="\d{7}|\d{10}" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="ZipCodeType">
    <xs:annotation>
      <xs:documentation>5 digit zip code.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="FiveDigitsConstraint">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="ZipCodePlusFourType">
    <xs:annotation>
      <xs:documentation> 4 digit zip code.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="FourDigitsConstraint">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="FiveDigitsConstraint">
    <xs:annotation>
      <xs:documentation> Any 5 digit only value (ZipCodeType).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{5}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="FourDigitsConstraint">
    <xs:annotation>
      <xs:documentation> Any 4 digit only value (ZipCodePlusFourType).</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9]{4}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SSNType">
    <xs:annotation>
      <xs:documentation>Social Security Number</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{3}-\d{2}-\d{4}"/>
    </xs:restriction>
  </xs:simpleType>

 <xs:complexType name="DEANumberType">
   <xs:simpleContent>
     <xs:extension base="DEANumberConstraint">
       <xs:attributeGroup ref="SourceValue"/>
     </xs:extension>
   </xs:simpleContent>
 </xs:complexType>
  <xs:simpleType name="DEANumberConstraint">
    <xs:annotation>
      <xs:documentation>2 Alphanumeric 7 digits.  Check sum will be validated at Gateway.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NCName">
      <xs:length value="9"/>
      <xs:pattern value="[A-Z]{2}\d{7}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="NPINumberType">
    <xs:simpleContent>
      <xs:extension base="NPINumberConstraint">
        <xs:attributeGroup ref="SourceValue"/>
     </xs:extension>
   </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="NPINumberConstraint">
    <xs:annotation>
      <xs:documentation>10 digit NPI Identifier check digit will be validated at Gateway and return a nil element on failure.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{10}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="NCPDPNumberType">
    <xs:simpleContent>
      <xs:extension base="NCPDPNumberConstraint">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="NCPDPNumberConstraint">
    <xs:annotation>
      <xs:documentation>7 digit NCPDP number.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="\d{7}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="RoleType">
    <xs:annotation>
      <xs:documentation>The best classification of the Provider in a Request over Gateway.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="Physician"/>
      <xs:enumeration value="Pharmacist"/>
      <xs:enumeration value="Pharmacist with prescriptive authority"/>
      <xs:enumeration value="Nurse Practitioner"/>
      <xs:enumeration value="Psychologist with prescriptive authority"/>
      <xs:enumeration value="Optometrist with prescriptive authority"/>
      <xs:enumeration value="Naturopathic Physician with prescriptive authority"/>
      <xs:enumeration value="Physician Assistant with prescriptive authority"/>
      <xs:enumeration value="Medical Resident with prescriptive authority"/>
      <xs:enumeration value="Medical Intern with prescriptive authority" />
      <xs:enumeration value="Dentist"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="TimeType">
    <xs:annotation>
      <xs:documentation>A time.  The source will contain a value if any translation was performed to confirm to the time type.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="TimeBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="TimeBaseType">
    <xs:annotation>
      <xs:documentation>An xs:time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time"></xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DateType">
    <xs:annotation>
      <xs:documentation>A time.  The source will contain a value if any translation was performed to confirm to the time type.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="DateBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="DateBaseType">
    <xs:annotation>
      <xs:documentation>An xs:date</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date"></xs:restriction>
  </xs:simpleType>

  <xs:complexType name="NumericType">
    <xs:annotation>
      <xs:documentation>A numeric type. If any conversion was done or the value is not a numeric or convertable to an numeric the source value will be populated.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="NumericBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="NumericBaseType">
    <xs:annotation>
      <xs:documentation>An xs:decimal</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:decimal"></xs:restriction>
  </xs:simpleType>

  <xs:complexType name="IntegerType">
    <xs:annotation>
      <xs:documentation>A positive integer. If any conversion was done or the value is not an integer or convertable to an integer the source value will be populated.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="IntegerBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="IntegerBaseType">
    <xs:annotation>
      <xs:documentation>An xs:nonNegativeInteger</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:nonNegativeInteger"></xs:restriction>
  </xs:simpleType>

  <xs:complexType name="StringType">
    <xs:annotation>
      <xs:documentation>A String. This is just xs:string with an source attribute incase  there is any translation on that value.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="StringBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="StringBaseType">
    <xs:annotation>
      <xs:documentation>An xs:string</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"></xs:restriction>
  </xs:simpleType>

  <xs:complexType name="LimitedStringType">
    <xs:annotation>
      <xs:documentation>A normalized string does not contain the carriage return (#xD), line feed (#xA) nor tab (#x9) characters.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="LimitedStringBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="LimitedStringBaseType">
    <xs:annotation>
      <xs:documentation>An xs:normalized limited to 255 characters used for names and things that should be limited.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:maxLength value="255"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="BooleanType">
    <xs:annotation>
      <xs:documentation>true or false with source if there is any translation on that value.</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="BooleanBaseType">
        <xs:attributeGroup ref="SourceValue"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="BooleanBaseType">
    <xs:annotation>
      <xs:documentation>true or false</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:boolean"></xs:restriction>
  </xs:simpleType>

  <xs:complexType name="DateRangeType">
    <xs:annotation>
      <xs:documentation>Date range</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="Begin" type="DateType" nillable="true"/>
      <xs:element name="End" type="DateType" nillable="true" />
    </xs:all>
  </xs:complexType>

  <xs:simpleType name="ComputerFriendlyNameType">
    <xs:annotation>
      <xs:documentation>Name type is has no spaces and a limited character set and must start with a Character. Suitable for User names etc.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:NCName">
      <xs:minLength value="3"/>
      <xs:maxLength value="50"/>
      <xs:whiteSpace value="collapse"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="NameType">
    <xs:sequence>
      <xs:element name="Prefix" type="LimitedStringType" minOccurs="0"/>
      <xs:element name="First" type="LimitedStringType"/>
      <xs:element name="Middle" type="LimitedStringType" minOccurs="0"/>
      <xs:element name="Last" type="LimitedStringType"/>
      <xs:element name="Suffix" type="LimitedStringType" minOccurs="0"/>
      <xs:element name="FullName" type="LimitedStringType" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>

  <xs:element name="NIEMRawSchema">
    <xs:annotation>
      <xs:documentation>The NIEM schema is a request document that validates against the PMIX IEPD.
        And is the underlying schema used over PMP Interconnect. It is not recommented
        that this schema be used directly.  If you send this in the request then you will get the
        raw PMIX IEPD response back from the PMP system and you should refer to that schema.
        No translation of any kind is performed if this option is used.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:any processContents="skip"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="AddressType">
    <xs:annotation>
      <xs:documentation>A Location Address. Whatever Information is available is sent back.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Street" type="LimitedStringType" minOccurs="0" maxOccurs="2" nillable="true"/>
      <xs:element name="City" type="LimitedStringType" minOccurs="0" nillable="true" />
      <xs:element name="StateCode" type="USStateCodeType" minOccurs="0" nillable="true"/>
      <xs:element name="ZipCode" type="ZipCodeType" minOccurs="0" nillable="true" />
      <xs:element name="ZipPlusFour" type="ZipCodePlusFourType" minOccurs="0" nillable="true"/>
    </xs:sequence>
  </xs:complexType>

  <xs:group name="StreetCityStateGroup">
    <xs:sequence>
      <xs:element name="Street" type="LimitedStringType" minOccurs="0" maxOccurs="2" />
      <xs:element name="City" type="LimitedStringType" minOccurs="0"/>
      <xs:element name="StateCode" type="USStateCodeType" minOccurs="0"/>
    </xs:sequence>
  </xs:group>
</xs:schema>
